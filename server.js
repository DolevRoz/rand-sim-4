require("source-map-support").install(),function(e){var t={};function o(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,o),s.l=!0,s.exports}o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)o.d(r,s,function(t){return e[t]}.bind(null,s));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=5)}([function(e,t){e.exports=require("express")},function(e,t){e.exports=require("dotenv/config")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("node-vibrant")},function(e,t){e.exports=require("mongoose")},function(e,t,o){e.exports=o(7)},function(e,t){e.exports=require("path")},function(e,t,o){"use strict";o.r(t);o(1);var r=o(0),s=o.n(r),n=o(2),a=o.n(n);class i{constructor(e,t={}){this.axiosInstance=a.a.create({baseURL:e,timeout:5e3,headers:t})}}var c=function(e,t={}){return new i(e,t).axiosInstance},h=o(3);class p{constructor(){this.httpService=c(process.env.UNSPLASH_API_URL,{Authorization:"Client-ID "+process.env.UNSPLASH_API_CLIENT_ID}),this.httpService.interceptors.response.use(e=>e,e=>{if(401!==e.response.status)return e;console.log("Error: API Responded with status code of 401, please check the key")})}static convertResponseTagsIntoArray(e){return e.map(e=>e.title)}static mapUnsplashSearchResponseToJson(e){return e.results.map(e=>({id:e.id,width:e.width,height:e.height,color:e.color,description:e.description,url:e.urls.regular,likes:e.likes,tags:p.convertResponseTagsIntoArray(e.tags)}))}static mapUnsplashPhotoInfoResponse(e){return{id:e.id,width:e.width,height:e.height,description:e.description,urls:e.urls,likes:e.likes,camera:e.exif,tags:p.convertResponseTagsIntoArray(e.tags)}}async fetchPhotosFromUnsplashApi(e,t){const o=await this.httpService.get("/search/photos?query="+e+"&page="+t);return p.mapUnsplashSearchResponseToJson(o.data)}async fetchPhotoInfo(e){const t=await this.httpService.get("/photos/"+e),o=await h.from(t.data.urls.regular).getPalette();return{...p.mapUnsplashPhotoInfoResponse(t.data),palette:{...o}}}}var u=p;class l{constructor(){this.httpService=c(process.env.COLORS_API_URL)}static mapColorsResponseToJson(e){return{name:e.name.value,hex:e.hex.clean,rgb:{r:e.rgb.r,g:e.rgb.g,b:e.rgb.b}}}async fetchColorInfo(e){try{const t=await this.httpService.get("id?hex="+e);return l.mapColorsResponseToJson(t.data)}catch(e){throw"ENOTFOUND"===e.code&&console.error("Can not access host",e.hostname),e}}}var f=l;class d{constructor(){this.unsplashApiService=new u,this.colorsApiService=new f}static removeHashFromHexCode(e){return e.replace("#","")}async fetchPhotosFromUnsplashApi(e,t){const o=await this.unsplashApiService.fetchPhotosFromUnsplashApi(e,t),r=[];for(const e of o)r.push(this.fetchColor(e.color));const s=await Promise.all(r);for(let e=0;e<o.length;e++)o[e].color=s[e];return o}async fetchColor(e){const t=d.removeHashFromHexCode(e);return await this.colorsApiService.fetchColorInfo(t)}async searchPhotos(e,t){const o=e.query.page||1,r=await this.fetchPhotosFromUnsplashApi(e.params.term,o),s=["likes","resolution"];if(e.query.orderBy){const o=e.query.orderBy;if(!s.includes(o))return t.status(422),void t.json({error:"Can not order by "+o});"likes"===o?r.sort((e,t)=>e.likes>t.likes):"resolution"===o&&r.sort((e,t)=>e.width*e.height>t.width*t.height)}t.send(r.reverse())}async fetchPhotoInfo(e,t){const o=await this.unsplashApiService.fetchPhotoInfo(e.params.photo_id);t.send(o)}}var v=new d;const g=s.a.Router();g.get("/search/:term",v.searchPhotos.bind(v)),g.get("/:photo_id",v.fetchPhotoInfo.bind(v));var m=g,y=o(4),P=o.n(y);o(6);(async()=>{const e=s()(),t=process.env.SERVER_PORT||3e3,o=process.env.MONGO_DB_HOST+":"+process.env.MONGO_DB_PORT+"/"+process.env.MONDO_DB_NAME,r=await P.a.connect(o,{useNewUrlParser:!0}).catch(e=>console.error("Mongoose connection threw an error:",e.message,"[Please check the port and the host]"));e.get("/health",(e,t)=>t.json({UP:!!r})),r||e.use((e,t)=>{t.status(500),t.json({error:"Server is unavailable at the moment"})}),e.use("/api/photos",m),e.listen(t,()=>console.log(`Server is listening on port ${t}`))})()}]);
